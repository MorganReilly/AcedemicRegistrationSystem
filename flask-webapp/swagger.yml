swagger: "2.0"
info:
  description: Academic Registration system swagger file for server code
  version: "1.0.0"
  title: Academic Registration System REST
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by server application
paths:
  /professors:
    get:
      operationId: "professors.read_all"
      tags:
        - "Professors"
      summary: "The professors data structure supported by the server application"
      description: "Read all professors"
      responses:
        200:
          description: "Successful read professors"
          schema:
            type: "array"
            items:
              properties:
                p_id:
                  type: "integer"
                  description: "ID of Professor"
                fname:
                  type: "string"
                  description: "First name of Professor"
                lname:
                  type: "string"
                  description: "Last name of Professor"
    post:
      operationId: "professors.create"
      tags:
        - "Professors"
      summary: "Create a professor"
      description: "Create a new professor"
      parameters:
        - name: "professor"
          in: "body"
          description: "Professor to create"
          required: True
          schema:
            type: "object"
            properties:
              fname:
                type: "string"
                description: "First name of professor to create"
              lname:
                type: "string"
                description: "Last name of professor to create"
      responses:
        201:
          description: "Successfully created professor in list"
          schema:
            properties:
              p_id:
                type: "integer"
                description: "ID of Professor"
              fname:
                type: "string"
                description: "First name of professor"
              lname:
                type: "string"
                description: "Last name of professor"

  /courses:
    get:
      operationId: "courses.read_all"
      tags:
        - "Courses"
      summary: "The courses data structure supported by the server application"
      description: "Read courses"
      responses:
        200:
          description: "Successful read courses"
          schema:
            type: "array"
            items:
              properties:
                c_id:
                  type: "integer"
                  description: "ID of Course"
                title:
                  type: "string"
                  description: "Title of course"
                p_id:
                  type: "string"
                  description: "ID of Professor assigned to course"
    post:
      operationId: "courses.create"
      tags:
        - "Courses"
      summary: "Create a course and add it to the courses list"
      description: "Create a new course on the courses list"
      parameters:
        - name: "course"
          in: "body"
          description: "Course to create"
          required: True
          schema:
            type: "object"
            properties:
              title:
                type: "string"
                description: "Title of course to create"
              p_id:
                type: "integer"
                description: "P_ID of professor to assign"
      responses:
        201:
          description: "Successfully created course in list"
          schema:
            properties:
              c_id:
                type: "integer"
                description: "ID of course"
              title:
                type: "string"
                description: "Title of course"
              p_id:
                type: "integer"
                description: "ID of professor(s) assigned to course"

  /students:
    get:
      operationId: "students.read_all"
      tags:
        - "Students"
      summary: "The Students data structure supported by the server application"
      description: "Read list of students"
      responses:
        200:
          description: "Successful read students list operation"
          schema:
            type: "array"
            items:
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
    post:
      operationId: "students.create"
      tags:
        - "Students"
      summary: "Create a student and add it to the students list"
      description: "Create a new student on the students list"
      parameters:
        - name: "student"
          in: "body"
          description: "Student to create"
          required: True
          schema:
            type: "object"
            properties:
              s_id:
                type: "string"
                description: "S_ID of student to create"
              fname:
                type: "string"
                description: "Name of student to create"
              lname:
                type: "string"
                description: "Name of student to create"
      responses:
        201:
          description: "Successfully created student in list"

  /registries:
    get:
      operationId: "registries.read_all"
      tags:
        - "Registries"
      summary: "The course registries data structure supported by the server application"
      description: "Read list of course registries"
      responses:
        200:
          description: "Successful read registries list operation"
          schema:
            type: "array"
            items:
              properties:
                id:
                  type: "integer"
                c_id:
                  type: "integer"
                s_id:
                  type: "integer"
    post:
      operationId: "registries.create"
      tags:
        - "Registries"
      summary: "Create a registry and add it to the registries list"
      description: "Create a new registry on the registries list"
      parameters:
        - name: "registry"
          in: "body"
          description: "Registry to create"
          required: True
          schema:
            type: "object"
            properties:
              r_id:
                type: "string"
                description: "R_ID of registry to create"
              c_title:
                type: "string"
                description: "Title of course to register"
              s_id:
                type: "string"
                description: "S_ID of student to register"
      responses:
        201:
          description: "Successfully created student in list"